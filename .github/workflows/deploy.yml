name: Terraform CI/CD Workflow

on:
  push:
    branches:
      - main  # Change this to your target branch
  pull_request:
    branches:
      - main  # Change this to your target branch

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Install Terraform
      run: |
        curl -LO "https://releases.hashicorp.com/terraform/$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)/terraform_$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)_linux_amd64.zip"
        unzip terraform_*_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform --version

    - name: Terraform Init
      working-directory: ./
      run: terraform init

    - name: Terraform Plan
      working-directory: ./
      run: terraform plan -out=tfplan 

    - name: Terraform Apply
      working-directory: ./
      run: terraform apply -auto-approve tfplan

    #- name: Terraform Init for dns.tf
      #working-directory: ./
      #run: terraform init

    #- name: Terraform Plan for dns.tf
      #working-directory: ./
      #run: terraform plan -out=dns.tfplan

    #- name: Terraform Apply for dns.tf
      #working-directory: ./
      #run: terraform apply -auto-approve dns.tfplan
  build_and_deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      
      - name: Checkout code
        uses: actions/checkout@v3

      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

     
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: navyakola104/webapp:${{ github.sha }}

      - name: Retrieve Terraform outputs
        id: tf-outputs
        run: |
          echo "Fetching Terraform outputs..."
          EC2_HOST=$(terraform output -raw ec2_host)
          EC2_USERNAME=$(terraform output -raw ec2_username)
          EC2_PRIVATE_KEY=$(terraform output -raw ec2_private_key)
          
          echo "::set-output name=ec2_host::$EC2_HOST"
          echo "::set-output name=ec2_username::$EC2_USERNAME"
          echo "::set-output name=ec2_private_key::$EC2_PRIVATE_KEY"

      - name: Use EC2 credentials in the next step
        with:
          host: ${{ steps.tf-outputs.outputs.ec2_host }}
          username: ${{ steps.tf-outputs.outputs.ec2_username }}
          key: ${{ steps.tf-outputs.outputs.ec2_private_key }}
          script: |
            # Your script logic here
            docker stop webapp || true
            docker rm webapp || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}
            docker run -d --name webapp -p 80:80 ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}
